{"version":3,"sources":["../../server/controllers/OrderController.js"],"names":["getOrderNumber","req","res","next","result","sequelize","query","type","QueryTypes","SELECT","orderName","ordername","error","status","json","message","createOrder","summary","summaryCart","order_discount","order_tax","order_city","order_address","order_status","order_user_id","body","context","models","orders","create","order_name","order_created_on","Date","order_total_qty","totalQty","order_subtotal","subTotal","order_total_due","parseInt","updateStock","Prod","i","length","products","findOne","where","prod_id","console","log","update","prod_stock","dataValues","qty","returning"],"mappings":"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","sourcesContent":["import { sequelize } from \"../models/init-models\"\r\n\r\nconst getOrderNumber = async (req,res,next)=>{\r\n    try {\r\n        const result = await sequelize.query(\"select 'ORD-'||to_char(now(),'DDMMYYY')||lpad(nextval('order_name_seq')||'',4,'0') as ordername\",\r\n        {\r\n            type : sequelize.QueryTypes.SELECT\r\n        })\r\n        req.orderName = result[0].ordername;\r\n        next();\r\n    } catch (error) {\r\n        res.status(404).json({message : error.message})\r\n    }\r\n}\r\n\r\nconst createOrder = async (req,res,next)=>{\r\n    const {summary} = req.summaryCart;\r\n    const {order_discount,order_tax,order_city,order_address,order_status,order_user_id} = req.body;\r\n    \r\n    try {\r\n        const result = await req.context.models.orders.create({\r\n            order_name : req.orderName,\r\n            order_created_on : new Date(),\r\n            order_total_qty : summary.totalQty,\r\n            order_subtotal : summary.subTotal,\r\n            order_discount : order_discount,\r\n            order_tax : order_tax,\r\n            order_city : order_city,\r\n            order_address : order_address,\r\n            order_status : order_status,\r\n            order_total_due : summary.subTotal,\r\n            order_user_id : parseInt(order_user_id)\r\n        })    \r\n        next();\r\n    } catch (error) {\r\n        res.status(404).json({message : error.message})\r\n    }   \r\n}\r\n\r\nconst updateStock = async (req,res,next)=>{\r\n    const Prod = req.Prod;\r\n    try {\r\n        for (let i = 0; i < Prod.length; i++) {\r\n            let result = await req.context.models.products.findOne({\r\n                where : {prod_id : Prod[i].prod_id}\r\n            });\r\n            try {\r\n                console.log();\r\n                await req.context.models.products.update(\r\n                    {\r\n                        prod_stock: result.dataValues.prod_stock - Prod[i].qty\r\n                    },\r\n                    { returning: true, where: {prod_id: Prod[i].prod_id} }\r\n                );\r\n            } catch (error) {\r\n                res.status(404).json({ message: error.message })\r\n            }\r\n            \r\n        }\r\n        next()\r\n    } catch (error) {\r\n        res.status(404).json({ message: error.message })\r\n    }\r\n}\r\n\r\n\r\nexport default {\r\n    getOrderNumber,\r\n    createOrder,\r\n    updateStock\r\n}"],"file":"OrderController.js"}