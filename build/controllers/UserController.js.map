{"version":3,"sources":["../../server/controllers/UserController.js"],"names":["SALT_ROUND","signup","req","res","username","user_firstname","user_lastname","email","user_password","user_phone","body","hashPassword","bcrypt","hash","result","context","models","users","create","user_name","user_email","dataValues","send","error","status","message","signin","password","findOne","where","compare","sendStatus"],"mappings":";;;;;;;AAAA;;;;AACA,MAAMA,UAAU,GAAG,EAAnB;;AAEA,MAAMC,MAAM,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,QAAM;AAAEC,IAAAA,QAAF;AAAWC,IAAAA,cAAX;AAA0BC,IAAAA,aAA1B;AAAwCC,IAAAA,KAAxC;AAA+CC,IAAAA,aAA/C;AAA6DC,IAAAA;AAA7D,MAA4EP,GAAG,CAACQ,IAAtF;AAEA,MAAIC,YAAY,GAAGH,aAAnB;AACAG,EAAAA,YAAY,GAAG,MAAMC,gBAAOC,IAAP,CAAYF,YAAZ,EAA0BX,UAA1B,CAArB;;AACA,MAAI;AACA,UAAMc,MAAM,GAAG,MAAMZ,GAAG,CAACa,OAAJ,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyBC,MAAzB,CAAgC;AACjDC,MAAAA,SAAS,EAAEf,QADsC;AAEjDC,MAAAA,cAAc,EAAGA,cAFgC;AAGjDC,MAAAA,aAAa,EAAGA,aAHiC;AAIjDc,MAAAA,UAAU,EAAEb,KAJqC;AAKjDC,MAAAA,aAAa,EAAEG,YALkC;AAMjDF,MAAAA,UAAU,EAAGA;AANoC,KAAhC,CAArB;AASA,UAAM;AAACU,MAAAA,SAAD;AAAWC,MAAAA;AAAX,QAAyBN,MAAM,CAACO,UAAtC;AACAlB,IAAAA,GAAG,CAACmB,IAAJ,CAAS;AAACH,MAAAA,SAAD;AAAWC,MAAAA;AAAX,KAAT;AACH,GAZD,CAYE,OAAOG,KAAP,EAAc;AACZpB,IAAAA,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqBC,KAAK,CAACE,OAA3B;AACH;AAEG;AACR;AACA;AACA;AACA;AACA;AACA;;AAEC,CA7BD,C,CA+BA;;;AACA,MAAMC,MAAM,GAAG,OAAMxB,GAAN,EAAUC,GAAV,KAAgB;AAC3B,QAAM;AAACI,IAAAA,KAAD;AAAOoB,IAAAA;AAAP,MAAmBzB,GAAG,CAACQ,IAA7B;;AAEA,MAAI;AACA,UAAMI,MAAM,GAAG,MAAMZ,GAAG,CAACa,OAAJ,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyBW,OAAzB,CAAiC;AAClDC,MAAAA,KAAK,EAAG;AAACT,QAAAA,UAAU,EAAGb;AAAd;AAD0C,KAAjC,CAArB;AAGA,UAAM;AAACY,MAAAA,SAAD;AAAWC,MAAAA,UAAX;AAAsBZ,MAAAA;AAAtB,QAAuCM,MAAM,CAACO,UAApD;AACA,UAAMS,OAAO,GAAG,MAAMlB,gBAAOkB,OAAP,CAAeH,QAAf,EAAwBnB,aAAxB,CAAtB;;AACA,QAAGsB,OAAH,EAAW;AACP,aAAO3B,GAAG,CAACmB,IAAJ,CAAS;AAACH,QAAAA,SAAD;AAAWC,QAAAA;AAAX,OAAT,CAAP;AACH,KAFD,MAEK;AACD,aAAOjB,GAAG,CAAC4B,UAAJ,CAAe,GAAf,CAAP;AACH;AAEJ,GAZD,CAYE,OAAOR,KAAP,EAAc;AACZ,WAAOpB,GAAG,CAAC4B,UAAJ,CAAe,GAAf,CAAP;AACH;AACJ,CAlBD;;eAoBe;AACX9B,EAAAA,MADW;AAEXyB,EAAAA;AAFW,C","sourcesContent":["import bcrypt from 'bcrypt';\r\nconst SALT_ROUND = 10;\r\n\r\nconst signup = async (req, res) => {\r\n    const { username,user_firstname,user_lastname,email, user_password,user_phone } = req.body;\r\n\r\n    let hashPassword = user_password;\r\n    hashPassword = await bcrypt.hash(hashPassword, SALT_ROUND);\r\n    try {\r\n        const result = await req.context.models.users.create({\r\n            user_name: username,\r\n            user_firstname : user_firstname,\r\n            user_lastname : user_lastname,\r\n            user_email: email,\r\n            user_password: hashPassword,\r\n            user_phone : user_phone\r\n\r\n        });\r\n        const {user_name,user_email} = result.dataValues;\r\n        res.send({user_name,user_email});\r\n    } catch (error) {\r\n        res.status(404).send(error.message);\r\n    }\r\n\r\n        /*  test dulu   \r\n        \r\n        let userPassword = user_password\r\n        userPassword = await bcrypt.hash(userPassword,SALT_ROUND);\r\n        console.log(userPassword);\r\n    \r\n        console.log(await bcrypt.compare(\"rahasia\",userPassword));\r\n        console.log(await bcrypt.compare(\"rahasiax\",userPassword)); */\r\n}\r\n\r\n// use sigin with token in authJWT\r\nconst signin = async(req,res)=>{\r\n    const {email,password} = req.body;\r\n\r\n    try {\r\n        const result = await req.context.models.users.findOne({\r\n            where : {user_email : email}\r\n        });\r\n        const {user_name,user_email,user_password} = result.dataValues;\r\n        const compare = await bcrypt.compare(password,user_password);\r\n        if(compare){\r\n            return res.send({user_name,user_email});\r\n        }else{\r\n            return res.sendStatus(404);\r\n        }\r\n        \r\n    } catch (error) {\r\n        return res.sendStatus(404);\r\n    }\r\n}\r\n\r\nexport default {\r\n    signup,\r\n    signin\r\n}"],"file":"UserController.js"}